# Commands description: see procgen.pdf for detailed explanation 		
# attach 0 -1 1 0 0 			p1: user profile index		p2: target-area			p3: type (1-imsi)		P4: PDPC profile index 	P5: csfb-area 
# activate 0 0    			p1: context-Id			p2: PDPC profile index
# modifyqos 0 1    			p1: context-Id			p2: PDPC profile index
# activate2nd 1 0 0			p1: context-Id			p2: PDPC profile index		p3: linked context-Id
# deactivate 1 0    			p1: context-Id			p2: cause
# detach				p1: cause			p2: type
# relocate -1 1	0			p1: target-area 		p2: reloc-type (1-UE-involved)	p3: cont-flag (0-fail, 1-pass)
# pathswitch -1 			p1: target-area 		
# updtarea -1  				p1: target-area			p2: rau-type (0-RA-Update)
# servicereq 1  			p1: service-type (1-data, 8-ss)
# release 0 0   			p1: bitmask (0-IuRelease) 	p2: cause
# start 1 1  				p1: context-Id			p2: load profile-index			
# startrcv 11 2 			p1: context-Id			p2: load profile-index					
# extservicereq 0 			p1: service-type (0-mo.csfb)
# smsps 0 1				p1: sms string index 		p2: called user index (relative to calling user, i.e. x would be calling x+1) 
# resetresource				p1: cause			p2: target-area			p3: domain(cs:0, ps:1)

# imsiattach 0 -1  			p1: user profile index		p2: target-area	
# emergencycall -1 0 -1 0               p1: called user, -1 for emergency, p2: PSTN profile id, 
#                                       p3: number from the profile, -1 for emergency, take any, p4: call type, 0 for voice
# setupcall 4 0 0 0 			p1: called user index 		p2: PSTN profile index		p3: index in PSTN profile	p4: type (0-voice, 1-video, 256-sip)
# disccall				p1: none
# imsidetach				p1: cause			p2: type
# relocatecs -1 1 0			p1: target-area 		p2: reloc-type (1-UE-involved)	p3: cont-flag (0-fail, 1-pass)
# smscs 0 1				p1: sms string index 		p2: called user index (relative to calling user, i.e. x would be calling x+1) 
# releasecs 0 0   			p1: bitmask (0-IuRelease) 	p2: cause		

# setarea 0                             p1: area-id

# wait imsiattach/imsidetach		p1: none
# wait attach/detach			p1: none
# wait activate/deactivate		p1: none
# paging				p1: paging-type (0-imsi, 1-tmsi)
# pagingcs				p1: paging-type (0-imsi, 1-tmsi)
# deregister 0   			p1: cause (UE-Deregister/IuH)
# uerror				p1: context (GTPU-Error-Indication)

# UMTS/LTE: context-Id high-bit set for peer-initiated context
# Target-Area: -1: next area, -2: use area from other domain, -3: stay on area (unconditional), -4: stay on technology // -22: 2g, -33: 3g, -44: 4g (-331: 3gIu, -332: 3gIuH)
# ATT-Type:     0: normal,    1: imsi,     2: Combined-CS,   3: Combined, 4: Emergency
# RAU/TAU-Type: 0: RA-Update, 1: Combined, 2: Combined-IMSI, 3: Periodic
# setupcall -1,x,y,z: -1 indicates PSTN loopback call
# Attach: 5th parameter = csfb-area if combined attach -1,0,1,.. (-1: search for 3g only)
# Attach/IMSIattach 1st parameter = -1: user profile index taken as configured by group/subscriber-group


############################################################################
############################################################################
##############################     4G: S1     ############################## 
############################################################################
############################################################################

### Functional model benchmarks ###
$fdd      = -44
$tps      = 1 # transactions per second (default)
$idle     = $tps # interval between transactions(default)
$enbx_mmex_sgwx = -44
$enbz_mmex_sgwx = -44
$rncx_mscx      = -33
$ps_domain = 1
$tmsi_mode = 2
$femto = -332
$tmsi_random = 1
$mocn_set_selected_plmn = 4

#############
# Defines   #
#############
$poweroff = 0xc00
$srvcc_csonly = 2
$srvcc_pscs = 3
$lte_voice  = 0x100
$lte_video  = 0x101
$umts_voice = 0x000
$umts_video = 0x001
$add_video  = 0x00010020
$del_video  = 0x00020020
$lte = -44
$femto_mocn = -332

### Load model benchmarks ###
$tp1                = 5000  # Loop timer    Separates transactions
$tp2                = 2000  # AMR timer Separates AMR periods (variable), Call-Hold-time
$tp3                = 60000 # USR timer Manual interaction
$tp4                = 15000 # IDL timer Idle loop for Data send/receive
$t1             = 1000  # MOC timer Delays MOC (wait for MTC ready)
$t2             = 1000  # MTC timer Delays MTC Detach (wait for MOC done)
$t3             = 2000  # IMS timer Separates Default EPS=5 from IMS EPS=6 
$t4             = 200   # RAU timer     Separates RAU from SREQ
$t5             = 1000  # Recover timer Delays Recovery
$t6             = 1000  # MTC timer for fast rampup (used for CSFB)
$tpwait             = 10000 # maximum wait time for peer events

$timer_interval =  200 # separate 2 subsequent procedures by a minimum time to avoid overlap
$timer_wait     = 5000 # time between trigger and request; i.e. DDN must trigger Paging within 5sec

$pkt_frames_min = 15
$pkt_mean_latency = 10.00
$pkt_error_ratio = 0.10

#####
# Testcase : 4G_TAU
#####

[s_4g_tau]
BEGIN_SCENARIO  = 
LOOP_SCENARIO   = attach 0 -44 $atttype 0, wait tp1, updtarea -44 1, wait tp2,  detach
END_SCENARIO    = 

[4G_TAU]
$description 	= 4G_TAU: ATT(combined IMSI/PTMSI)-TAU-DET
$parameter 		= $numberofusers=1, $firstuser=0, $rate=1, $loops=1, $atttype=1
scenarioswitchmode 		= direct                     	# modes: 'direct', 'up/down', 'concurrent'
group[0].firstUser 		= $firstuser  					# 1st user  of 1st group
group[0].amountOfUser 	= $numberofusers 				# num users of 1st group
group[0].userplanemode	= gtp internal generator 		# Use Packetgen
period[0].group[0].beginRate = $rate  					# begin rate of 1st group+per
period[0].group[0].loopRate = $rate   					# loop rate of 1st group+per
period[0].group[0].endRate = $rate    					# end rate of 1st group+per
period[0].group[0].timertp1 = 3000    					# timer A 1st group+per
period[0].group[0].timertp2 = 5000    					# timer A 1st group+per
period[0].group[0].looplimit = $numberofusers * $loops  #
period[0].duration = 0                  				# duration of 1st period
period[0].group[0].scenario = s_4g_tau

verify =
      (received_Attach_Acc_ == $numberofusers)  and
      (received_Detach_Acc_ == $numberofusers)  and
      (received_Initial_Context_Setup_Request == $numberofusers)  and
      (received_Sec__Mode_Cmd_ == $numberofusers)  and
      (received_UE_Context_Release_Command == $numberofusers)  and
      (sent_Attach_Cmp_ == $numberofusers)  and
      (sent_Attach_Req_ == $numberofusers)  and
      (sent_Detach_Req_ == $numberofusers)  and
      (sent_Initial_Context_Setup_Response == $numberofusers)  and
      (sent_Initial_UE_Message == $numberofusers )  and
      (sent_PDN_Conn__Req_ == $numberofusers)  and
      (sent_Sec__Mode_Cmp_ == $numberofusers)  and
      (sent_UE_Context_Release_Complete == $numberofusers)



########################
# Testcase: 4G_M2CN_PS #
########################

[s_4g_m2cn_ps]
BEGIN_SCENARIO  = 
LOOP_SCENARIO   = attach 0 -44 $atttype 0, wait tp1, detach
END_SCENARIO    = 

[4G_M2CN_PS]
$description 	= 4G_M2CN_PS: ATT(combined IMSI/PTMSI)-DET
$parameter 		= $numberofusers=1, $firstuser=0, $rate=1, $loops=1, $atttype=0
scenarioswitchmode 		= direct                     	# modes: 'direct', 'up/down', 'concurrent'
group[0].firstUser 		= $firstuser  					# 1st user  of 1st group
group[0].amountOfUser 	= $numberofusers 				# num users of 1st group
group[0].userplanemode	= gtp internal generator 		# Use Packetgen
period[0].group[0].beginRate = $rate  					# begin rate of 1st group+per
period[0].group[0].loopRate = $rate   					# loop rate of 1st group+per
period[0].group[0].endRate = $rate    					# end rate of 1st group+per
period[0].group[0].timertp1 = 3000    					# timer A 1st group+per
period[0].group[0].looplimit = $numberofusers * $loops  #
period[0].duration = 0                  				# duration of 1st period
period[0].group[0].scenario = s_4g_m2cn_ps

verify =
      (received_Attach_Acc_ == $numberofusers)  and
      (received_Detach_Acc_ == $numberofusers)  and
      (received_Initial_Context_Setup_Request == $numberofusers)  and
      (received_Sec__Mode_Cmd_ == $numberofusers)  and
      (received_UE_Context_Release_Command == $numberofusers)  and
      (sent_Attach_Cmp_ == $numberofusers)  and
      (sent_Attach_Req_ == $numberofusers)  and
      (sent_Detach_Req_ == $numberofusers)  and
      (sent_Initial_Context_Setup_Response == $numberofusers)  and
      (sent_Initial_UE_Message == $numberofusers )  and
      (sent_PDN_Conn__Req_ == $numberofusers)  and
      (sent_Sec__Mode_Cmp_ == $numberofusers)  and
      (sent_UE_Context_Release_Complete == $numberofusers)

##############################
# Testcase: 4G_M2AS_PING_FIX #
##############################

[s_4g_m2as_ping_fix]
#BEGIN_SCENARIO  = setarea 4201 , attach 0 -44 $atttype 0, wait tp2, 
BEGIN_SCENARIO  = attach 0 $targetarea $atttype 0, wait tp2, 
LOOP_SCENARIO   = start 0 $trafficprofile, wait tp3, stop 0, wait tp2,
END_SCENARIO    = detach

[4G_M2AS_PING_FIX]
$description = 4G PING with fixed length
$parameter = $numberofusers=1, $firstuser=0, $rate=1, $loops=1, $atttype=1, $trafficprofile=0, $targetarea=-44, $traffduration=4
#scenarioswitchmode = direct                     		# modes: 'direct', 'up/down', 'concurrent'
#test VLVO 2015.02.23-13.24.51 - 
scenarioswitchmode = direct                     		# modes: 'direct', 'up/down', 'concurrent'
group[0].firstUser = $firstuser  				# 1st user  of 1st group
group[0].amountOfUser = $numberofusers 				# num users of 1st group
group[0].userplanemode  = gtp internal generator 		# Use Packetgen
period[0].group[0].beginRate = $rate  				# begin rate of 1st group+per
period[0].group[0].loopRate = $rate   				# loop rate of 1st group+per
period[0].group[0].endRate = $rate    				# end rate of 1st group+per
period[0].group[0].timertp1 = 3000      			# timer A 1st group+per
period[0].group[0].timertp2 = 100       			# timer B 1st group+per
#period[0].group[0].timertp2 = 3000       			# timer B 1st group+per
period[0].group[0].timertp3 = $traffduration * 1000    	        # timer B 1st group+per
period[0].group[0].looplimit = $numberofusers * $loops 		#
period[0].duration = 20                  			# duration of 1st period
period[0].group[0].scenario = s_4g_m2as_ping_fix

verify =
      (received_Attach_Acc_ == $numberofusers)  and
      (received_Detach_Acc_ == $numberofusers)  and
      (received_Initial_Context_Setup_Request == $numberofusers)  and
      (received_Sec__Mode_Cmd_ == $numberofusers)  and
      (received_UE_Context_Release_Command == $numberofusers)  and
      (sent_Attach_Cmp_ == $numberofusers)  and
      (sent_Attach_Req_ == $numberofusers)  and
      (sent_Detach_Req_ == $numberofusers)  and
      (sent_Initial_Context_Setup_Response == $numberofusers)  and
      (sent_Initial_UE_Message == $numberofusers )  and
      (sent_PDN_Conn__Req_ == $numberofusers)  and
      (sent_Sec__Mode_Cmp_ == $numberofusers)  and
      (sent_UE_Context_Release_Complete == $numberofusers)

#########################
# Testcase: 4G_M2AS_UDP #
#########################

[s_4g_m2as_udp]
BEGIN_SCENARIO  = attach 0 -44 $atttype 0, wait tp2
LOOP_SCENARIO   = start 0 $trafficprofile,
		  startrcv 0 $trafficprofile, wait tp1,
                  stoprcv 0, wait tp2,
                  stop 0
END_SCENARIO    = detach

[4G_M2AS_UDP]
$description = 4G_M2AS_UDP: ATT--ACT--START--UDP(UL+DL)--STOP--DET
$parameter = $numberofusers=1, $firstuser=0, $rate=1, $loops=1, $atttype=1, $trafficprofile=1
scenarioswitchmode = direct                                     # modes: 'direct', 'up/down', 'concurrent'
group[0].firstUser = $firstuser                                 # 1st user  of 1st group
group[0].amountOfUser = $numberofusers                          # num users of 1st group
group[0].userplanemode  = gtp internal generator                # Use Packetgen
period[0].group[0].beginRate = $rate                            # begin rate of 1st group+per
period[0].group[0].loopRate = $rate                             # loop rate of 1st group+per
period[0].group[0].endRate = $rate                              # end rate of 1st group+per
period[0].group[0].timertp1 = 10000                              # timer A 1st group+per
period[0].group[0].timertp2 = 100                               # timer B 1st group+per
period[0].group[0].looplimit = $numberofusers * $loops          #
period[0].duration = 0                                          # duration of 1st period
period[0].group[0].scenario = s_4g_m2as_udp

verify =
      (received_Attach_Acc_ == $numberofusers)  and
      (received_Detach_Acc_ == $numberofusers)  and
      (received_Initial_Context_Setup_Request == $numberofusers)  and
      (received_Sec__Mode_Cmd_ == $numberofusers)  and
      (received_UE_Context_Release_Command == $numberofusers)  and
      (sent_Attach_Cmp_ == $numberofusers)  and
      (sent_Attach_Req_ == $numberofusers)  and
      (sent_Detach_Req_ == $numberofusers)  and
      (sent_Initial_Context_Setup_Response == $numberofusers)  and
      (sent_Initial_UE_Message == $numberofusers )  and
      (sent_PDN_Conn__Req_ == $numberofusers)  and
      (sent_Sec__Mode_Cmp_ == $numberofusers)  and
      (sent_UE_Context_Release_Complete == $numberofusers) and
      (pktgen_received_total_packets > 0) and 
      (pktgen_received_total_packets == pktrcv_sent_total_packets) and 
      (pktgen_sent_total_packets > 0) and 
      (pktgen_sent_total_packets == pktrcv_received_total_packets) 


#########################
# Testcase: 4G_M2AS_SRQ_UDP #
#########################

[s_4g_m2as_srq_udp]
BEGIN_SCENARIO  = attach 0 -44 $atttype 0, wait tp2,
                  release 0 20, wait tp2
LOOP_SCENARIO   = servicereq 1, wait tp2,
                  start 0 $trafficprofile,
		  startrcv 0 $trafficprofile, wait tp1,
                  stoprcv 0, wait tp2,
                  stop 0
END_SCENARIO    = detach

[4G_M2AS_SRQ_UDP]
$description = 4G_M2AS_SRQ_UDP: ATT--ACT--REL--SRQ--START--UDP(UL+DL)--STOP--DET
$parameter = $numberofusers=1, $firstuser=0, $rate=1, $loops=1, $atttype=1, $trafficprofile=1
scenarioswitchmode = direct                                     # modes: 'direct', 'up/down', 'concurrent'
group[0].firstUser = $firstuser                                 # 1st user  of 1st group
group[0].amountOfUser = $numberofusers                          # num users of 1st group
group[0].userplanemode  = gtp internal generator                # Use Packetgen
period[0].group[0].beginRate = $rate                            # begin rate of 1st group+per
period[0].group[0].loopRate = $rate                             # loop rate of 1st group+per
period[0].group[0].endRate = $rate                              # end rate of 1st group+per
period[0].group[0].timertp1 = 10000                              # timer A 1st group+per
period[0].group[0].timertp2 = 100                               # timer B 1st group+per
period[0].group[0].looplimit = $numberofusers * $loops          #
period[0].duration = 0                                          # duration of 1st period
period[0].group[0].scenario = s_4g_m2as_srq_udp

verify =
      (received_Attach_Acc_ == $numberofusers)  and
      (received_Detach_Acc_ == $numberofusers)  and
      (received_Initial_Context_Setup_Request == 2 * $numberofusers)  and
      (received_Sec__Mode_Cmd_ == 2 * $numberofusers)  and
      (received_UE_Context_Release_Command == 2 * $numberofusers)  and
      (sent_Attach_Cmp_ == $numberofusers)  and
      (sent_Attach_Req_ == $numberofusers)  and
      (sent_Detach_Req_ == $numberofusers)  and
      (sent_Initial_Context_Setup_Response == 2 * $numberofusers)  and
      (sent_Initial_UE_Message == 2 * $numberofusers )  and
      (sent_PDN_Conn__Req_ == $numberofusers)  and
      (sent_Sec__Mode_Cmp_ == 2 * $numberofusers)  and
      (sent_UE_Context_Release_Complete == 2 * $numberofusers) and
      (pktgen_received_total_packets > 0) and 
      (pktgen_received_total_packets == pktrcv_sent_total_packets) and 
      (pktgen_sent_total_packets > 0) and 
      (pktgen_sent_total_packets == pktrcv_received_total_packets) 

#########################
# Testcase: 4G_M2AS_DDN_UDP #
#########################

[s_4g_m2as_ddn_udp]
BEGIN_SCENARIO  = attach 0 -44 $atttype 0, wait tp2,
                  release 0 20, wait tp2
LOOP_SCENARIO   = wait tp3,
                  startrcv 0 $trafficprofile,
                  wait tp3,
                  start 0 $trafficprofile, wait tp1,
                  stoprcv 0, wait tp2,
                  stop 0
END_SCENARIO    = detach

[4G_M2AS_DDN_UDP]
$description = 4G_M2AS_DDN_UDP: ATT--ACT--REL--wait tp3--START UDP DL--wait tp3--START UDP UL--STOP--DET
$parameter = $numberofusers=1, $firstuser=0, $rate=1, $loops=1, $atttype=1, $trafficprofile=1
scenarioswitchmode = direct                                     # modes: 'direct', 'up/down', 'concurrent'
group[0].firstUser = $firstuser                                 # 1st user  of 1st group
group[0].amountOfUser = $numberofusers                          # num users of 1st group
group[0].userplanemode  = gtp internal generator                # Use Packetgen
period[0].group[0].beginRate = $rate                            # begin rate of 1st group+per
period[0].group[0].loopRate = $rate                             # loop rate of 1st group+per
period[0].group[0].endRate = $rate                              # end rate of 1st group+per
period[0].group[0].timertp1 = 10000                             # timer A 1st group+per
period[0].group[0].timertp2 = 100                               # timer B 1st group+per
period[0].group[0].timertp3 = 2000                              # timer B 1st group+per
period[0].group[0].looplimit = $numberofusers * $loops          #
period[0].duration = 0                                          # duration of 1st period
period[0].group[0].scenario = s_4g_m2as_ddn_udp

verify =
      (received_Attach_Acc_ == $numberofusers)  and
      (received_Detach_Acc_ == $numberofusers)  and
      (received_Initial_Context_Setup_Request == 2 * $numberofusers)  and
      (received_Sec__Mode_Cmd_ == 2 * $numberofusers)  and
      (received_UE_Context_Release_Command == 2 * $numberofusers)  and
      (sent_Attach_Cmp_ == $numberofusers)  and
      (sent_Attach_Req_ == $numberofusers)  and
      (sent_Detach_Req_ == $numberofusers)  and
      (sent_Initial_Context_Setup_Response == 2 * $numberofusers)  and
      (sent_Initial_UE_Message == 2 * $numberofusers )  and
      (sent_PDN_Conn__Req_ == $numberofusers)  and
      (sent_Sec__Mode_Cmp_ == 2 * $numberofusers)  and
      (sent_UE_Context_Release_Complete == 2 * $numberofusers) and
      (pktgen_received_total_packets > 0) and
      (pktgen_received_total_packets == pktrcv_sent_total_packets) and
      (pktgen_sent_total_packets > 0) and
      (pktgen_sent_total_packets == pktrcv_received_total_packets)

#########################
# Testcase: 4G_M2AS_TCP #
#########################

[s_4g_m2as_tcp]
BEGIN_SCENARIO  = attach 0 -44 $atttype 0, wait tp2,
                  release 0 20, wait tp2
LOOP_SCENARIO   = servicereq 1, wait tp2,
                  start 0 $trafficprofile,
                  startrcv 0 $trafficprofile, wait tp1,
                  stoprcv 0, wait tp2,
                  stop 0
END_SCENARIO    = detach

[4G_M2AS_TCP]
$description = 4G_M2AS_TCP: ATT--ACT--START--TCP(UL+DL)--STOP--DET
$parameter = $numberofusers=1, $firstuser=0, $rate=1, $loops=1, $atttype=1, $trafficprofile=2
scenarioswitchmode = direct                                     # modes: 'direct', 'up/down', 'concurrent'
group[0].firstUser = $firstuser                                 # 1st user  of 1st group
group[0].amountOfUser = $numberofusers                          # num users of 1st group
group[0].userplanemode  = gtp internal generator                # Use Packetgen
period[0].group[0].beginRate = $rate                            # begin rate of 1st group+per
period[0].group[0].loopRate = $rate                             # loop rate of 1st group+per
period[0].group[0].endRate = $rate                              # end rate of 1st group+per
period[0].group[0].timertp1 = 3000                              # timer A 1st group+per
period[0].group[0].timertp2 = 100                               # timer B 1st group+per
period[0].group[0].looplimit = $numberofusers * $loops          #
period[0].duration = 0                                          # duration of 1st period
period[0].group[0].scenario = s_4g_m2as_tcp

verify =
      (received_Attach_Acc_ == $numberofusers)  and
      (received_Detach_Acc_ == $numberofusers)  and
      (received_Initial_Context_Setup_Request == 2 * $numberofusers)  and
      (received_Sec__Mode_Cmd_ == 2 * $numberofusers)  and
      (received_UE_Context_Release_Command == 2 * $numberofusers)  and
      (sent_Attach_Cmp_ == $numberofusers)  and
      (sent_Attach_Req_ == $numberofusers)  and
      (sent_Detach_Req_ == $numberofusers)  and
      (sent_Initial_Context_Setup_Response == 2 * $numberofusers)  and
      (sent_Initial_UE_Message == 2 * $numberofusers )  and
      (sent_PDN_Conn__Req_ == $numberofusers)  and
      (sent_Sec__Mode_Cmp_ == 2 * $numberofusers)  and
      (sent_UE_Context_Release_Complete == 2 * $numberofusers) and
      (pktgen_received_total_packets > 4) and 
      (pktgen_received_total_packets - 4 == pktrcv_sent_total_packets) and 
      (pktgen_sent_total_packets > 4) and 
      (pktgen_sent_total_packets - 4 == pktrcv_received_total_packets) 

############################
# Testcase: 4G_AS2M_PAGING #
############################

[s_4g_as2m_paging]
BEGIN_SCENARIO   = attach 0 -44 1 $apn 0,
		   wait tp1,
		   release 0 20,
		   wait tp1,
LOOP_SCENARIO    = startrcv 0 $trafficprofile, wait tp2,
                   stoprcv 0, wait tp1,
END_SCENARIO     = detach 0,
RECOVER_SCENARIO =

[4G_AS2M_PAGING]
$description = 4G_AS2M_PAGING: ATT--REL--UDP(DL)--PagingPS--ACT--DET
$parameter = $numberofusers=1, $firstuser=0, $rate=1, $apn=0, $loops=1, $trafficprofile=1
scenarioswitchmode = direct                                     # modes: 'direct', 'up/down', 'concurrent'
group[0].firstUser = $firstuser                                 # 1st user  of 1st group
group[0].amountOfUser = $numberofusers                          # num users of 1st group
group[0].userplanemode  = gtp internal generator                # Use Packetgen
period[0].group[0].beginRate = $rate                            # begin rate of 1st group+per
period[0].group[0].loopRate = $rate                             # loop rate of 1st group+per
period[0].group[0].endRate = $rate                              # end rate of 1st group+per
period[0].group[0].timertp1 = 100                               # timer A 1st group+per
period[0].group[0].timertp2 = 3000                              # timer B 1st group+per
period[0].group[0].looplimit = $numberofusers * $loops	        # no loop limit
period[0].duration = 0					        # in seconds
period[0].group[0].scenario = s_4g_as2m_paging

verify = (sent_Attach_Req_ >= $numberofusers) and
         (received_Attach_Acc_ >= $numberofusers) and
         (sent_Attach_Cmp_ >= $numberofusers) and
         (received_Attach_Acc_ == sent_Attach_Cmp_)

#############################################################################
##############################     General     ############################## 
#############################################################################

[General]
userplanemode 				= gtp internal generator # set the up mode: gtp bridge or gtp bridge trigger or gtp internal generator
resetstats				= true 			 # true|false: resets all stats at testcase start


